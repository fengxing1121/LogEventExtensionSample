<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TcHmiSrvExtNet</name>
    </assembly>
    <members>
        <member name="T:TcHmiSrv.Alarm">
            <summary>
            This class can be used as payload for the <see cref="T:TcHmiSrv.Event"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Alarm.op_Equality(TcHmiSrv.Alarm,TcHmiSrv.Alarm)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Alarm"/> is equal to the current <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Alarm"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Alarm"/> to compare with the current <see cref="T:TcHmiSrv.Alarm"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Alarm"/> is equal to the current <see cref="T:TcHmiSrv.Alarm"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Alarm.op_Inequality(TcHmiSrv.Alarm,TcHmiSrv.Alarm)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Alarm"/> is not equal to the current <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Alarm"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Alarm"/> to compare with the current <see cref="T:TcHmiSrv.Alarm"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Alarm"/> is not equal to the current <see cref="T:TcHmiSrv.Alarm"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Alarm.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Alarm"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Alarm"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Alarm.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Alarm"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Alarm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Alarm"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Alarm.#ctor(TcHmiSrv.Context,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Alarm"/> class with the specified <see cref="T:TcHmiSrv.Context"/> and name.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> to be set.</param>
            <param name="name">The name to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Alarm.#ctor(TcHmiSrv.Alarm)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Alarm"/> class based on another
            <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Alarm"/>.</param>
        </member>
        <member name="P:TcHmiSrv.Alarm.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Alarm"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.Id">
            <summary>
            Gets or sets the unique id of the <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.Severity">
            <summary>
            Gets or sets the <see cref="P:TcHmiSrv.Alarm.Severity"/> of the <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.TimeRaised">
            <summary>
            Gets or sets the time the <see cref="T:TcHmiSrv.Alarm"/> was raised.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.TimeCleared">
            <summary>
            Gets or sets the time the <see cref="T:TcHmiSrv.Alarm"/> was cleared.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.TimeConfirmed">
            <summary>
            Gets or sets the time the <see cref="T:TcHmiSrv.Alarm"/> was confirmed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.ConfirmationState">
            <summary>
            Gets or sets the confirmation state of the <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.Parameters">
            <summary>
            Gets the parameters of the <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.Name">
            <summary>
            Gets or sets the name of the <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.Domain">
            <summary>
            Gets or sets the domain that triggered the <see cref="T:TcHmiSrv.Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Alarm.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Alarm"/>. (<see cref="F:TcHmiSrv.ValueType.ValueType_Alarm"/>)
            </summary>
        </member>
        <member name="T:TcHmiSrv.AlarmChangeType">
            <summary>
            Represents how an <see cref="T:TcHmiSrv.Alarm"/> can change.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Binary">
            <summary>
            Holds a binary string.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Binary.#ctor(System.Byte[],System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Binary"/> class with the given <see cref="T:System.Byte"/> array and the specified length.
            </summary>
            <param name="bytes">The <see cref="T:System.Byte"/> array to be set.</param>
            <param name="length">The length to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Binary"/> class with the given <see cref="T:System.Byte"/> array and the specified length.
            </summary>
            <param name="bytes">The <see cref="T:System.Byte"/> array to be set.</param>
            <param name="length">The length to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Binary"/> class with the given <see cref="T:System.Byte"/> array.
            </summary>
            <param name="bytes">The <see cref="T:System.Byte"/> array to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.op_Implicit(TcHmiSrv.Binary)~System.Byte[]">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Binary"/> class to the appropriate <see cref="T:System.Byte"/> array.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Binary"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.op_Implicit(System.Byte[])~TcHmiSrv.Binary">
            <summary>
            Converts a <see cref="T:System.Byte"/> array to the appropriate instance of the <see cref="T:TcHmiSrv.Binary"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Byte"/> array to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.op_Implicit(TcHmiSrv.Binary)~System.Decimal">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Binary"/> class to the appropriate <see cref="T:System.Decimal"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Binary"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.op_Implicit(System.Decimal)~TcHmiSrv.Binary">
            <summary>
            Converts a <see cref="T:System.Decimal"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Binary"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Decimal"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.op_Equality(TcHmiSrv.Binary,TcHmiSrv.Binary)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Binary"/> is equal to the current <see cref="T:TcHmiSrv.Binary"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Binary"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Binary"/> to compare with the current <see cref="T:TcHmiSrv.Binary"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Binary"/> is equal to the current <see cref="T:TcHmiSrv.Binary"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Binary.op_Inequality(TcHmiSrv.Binary,TcHmiSrv.Binary)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Binary"/> is not equal to the current <see cref="T:TcHmiSrv.Binary"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Binary"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Binary"/> to compare with the current <see cref="T:TcHmiSrv.Binary"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Binary"/> is not equal to the current <see cref="T:TcHmiSrv.Binary"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Binary.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Binary"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Binary"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Binary"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Binary.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Binary"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Binary.set_binary(System.Byte[],System.UInt32)">
            <summary>
            Sets the binary data to the given <see cref="T:System.Byte"/> array with the specified length.
            </summary>
            <param name="bytes">The <see cref="T:System.Byte"/> array to be set.</param>
            <param name="length">The length to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Binary.set_binary(System.Byte[],System.Int32)">
            <summary>
            Sets the binary data to the given <see cref="T:System.Byte"/> array with the specified length.
            </summary>
            <param name="bytes">The <see cref="T:System.Byte"/> array to be set.</param>
            <param name="length">The length to be set.</param>
        </member>
        <member name="P:TcHmiSrv.Binary.Size">
            <summary>
            Represents the size of the binary string.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Binary.Data">
            <summary>
            Contains the data of the binary string.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Binary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Binary"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Binary.Empty">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Binary"/> is empty.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Binary.Valid">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Binary"/> is valid.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Command">
            <summary>
            Holds a single command to server symbols or extension symbols.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Command.op_Equality(TcHmiSrv.Command,TcHmiSrv.Command)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Command"/> is equal to the current <see cref="T:TcHmiSrv.Command"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Command"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Command"/> to compare with the current <see cref="T:TcHmiSrv.Command"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Command"/> is equal to the current <see cref="T:TcHmiSrv.Command"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Command.op_Inequality(TcHmiSrv.Command,TcHmiSrv.Command)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Command"/> is not equal to the current <see cref="T:TcHmiSrv.Command"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Command"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Command"/> to compare with the current <see cref="T:TcHmiSrv.Command"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Command"/> is not equal to the current <see cref="T:TcHmiSrv.Command"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Command.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Command"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Command"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Command"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Command.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Command"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Command.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Command"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Command.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Command"/> class with the specified name.
            </summary>
            <param name="name">The name to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Command.#ctor(TcHmiSrv.Command)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Command"/> class based on another <see cref="T:TcHmiSrv.Command"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Command"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Command.swap(TcHmiSrv.Command)">
            <summary>
            Exchanges the values of two instances of the <see cref="T:TcHmiSrv.Command"/> class.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Command"/>.</param>
            <returns>true if the swap was successful; otherwise, false.</returns>
        </member>
        <member name="P:TcHmiSrv.Command.Name">
            <summary>
            Gets or sets the name of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.Mapping">
            <summary>
            Gets the mapping of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.Domain">
            <summary>
            Gets the domain of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.Options">
            <summary>
            Gets or sets the command options of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.Result">
            <summary>
            Gets the result of the symbol.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.ExtensionResult">
            <summary>
            Gets or sets the extension result of the <see cref="T:TcHmiSrv.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.ResultString">
            <summary>
            Gets or sets the result string of the <see cref="T:TcHmiSrv.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.ReadValue">
            <summary>
            Gets or sets the read value of the <see cref="T:TcHmiSrv.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.WriteValue">
            <summary>
            Gets or sets the write value of the <see cref="T:TcHmiSrv.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.SymbolOptions">
            <summary>
            Gets the options of the symbol used by this <see cref="T:TcHmiSrv.Command"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.CustomerData">
            <summary>
            Gets or sets the customer data associated with this <see cref="T:TcHmiSrv.Command"/>. This can be used to identify multiple calls to the same method in one request.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.Path">
            <summary>
            Gets the path of the mapping.
            </summary>
            <example>PLC1::MAIN::test</example>
        </member>
        <member name="P:TcHmiSrv.Command.Changed">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:TcHmiSrv.Command"/> has changed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Command.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Command"/> is set.
            </summary>
        </member>
        <member name="T:TcHmiSrv.CommandGroup">
            <summary>
            Holds a group of commands to server symbols or extension symbols.
            </summary>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.op_Equality(TcHmiSrv.CommandGroup,TcHmiSrv.CommandGroup)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.CommandGroup"/> is equal to the current <see cref="T:TcHmiSrv.CommandGroup"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.CommandGroup"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.CommandGroup"/> to compare with the current <see cref="T:TcHmiSrv.CommandGroup"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.CommandGroup"/> is equal to the current <see cref="T:TcHmiSrv.CommandGroup"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.op_Inequality(TcHmiSrv.CommandGroup,TcHmiSrv.CommandGroup)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.CommandGroup"/> is not equal to the current <see cref="T:TcHmiSrv.CommandGroup"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.CommandGroup"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.CommandGroup"/> to compare with the current <see cref="T:TcHmiSrv.CommandGroup"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.CommandGroup"/> is not equal to the current <see cref="T:TcHmiSrv.CommandGroup"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.CommandGroup"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.CommandGroup"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.CommandGroup"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.CommandGroup"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.CommandGroup"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.CommandGroup"/> class with the specified domain.
            </summary>
            <param name="name">The name of the domain.</param>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.#ctor(TcHmiSrv.CommandGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.CommandGroup"/> class based on another see cref="TcHmiSrv::CommandGroup"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.CommandGroup"/>.</param>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.Item(System.UInt32)">
            <summary>
            Accesses a <see cref="T:TcHmiSrv.Command"/> in the <see cref="T:TcHmiSrv.CommandGroup"/> at the specified index.
            </summary>
            <param name="index">The index of the <see cref="T:TcHmiSrv.Command"/> to get.</param>
            <returns>The <see cref="T:TcHmiSrv.Command"/> at the specified index or a null <see cref="T:TcHmiSrv.Command"/> if the <see cref="T:TcHmiSrv.Command"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.insert(TcHmiSrv.CommandVectorIterator,TcHmiSrv.Command)">
            <summary>
            Inserts a <see cref="T:TcHmiSrv.Command"/> at the specified position in the vector.
            </summary>
            <param name="position">The position of the <see cref="T:TcHmiSrv.Command"/> to insert.</param>
            <param name="command">The <see cref="T:TcHmiSrv.Command"/> to insert.</param>
            <returns>A <see cref="T:TcHmiSrv.CommandVectorIterator"/> to the inserted <see cref="T:TcHmiSrv.Command"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.find(System.UInt32)">
            <summary>
            Finds a <see cref="T:TcHmiSrv.Command"/> with the specified index in the vector.
            </summary>
            <param name="index">The index of the <see cref="T:TcHmiSrv.Command"/> to find.</param>
            <returns>A <see cref="T:TcHmiSrv.CommandVectorIterator"/> to the <see cref="T:TcHmiSrv.Command"/> with the specified key or a <see cref="T:TcHmiSrv.CommandVectorIterator"/> to the end of the vector if the <see cref="T:TcHmiSrv.Command"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.remove(TcHmiSrv.CommandVectorIterator)">
            <summary>
            Removes a <see cref="T:TcHmiSrv.Command"/> at the specified position from the vector.
            </summary>
            <param name="position">The position of the <see cref="T:TcHmiSrv.Command"/> that should be removed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Command"/> has been removed or <see cref="F:TcHmiSrv.ErrorValue.HMI_E_ENTRY_NOT_FOUND"/> if the <see cref="T:TcHmiSrv.Command"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.reserve(System.UInt32)">
            <summary>
            Reserves memory for a number of <see cref="T:TcHmiSrv.Command"/>s to reduce memory allocations.
            </summary>
            <param name="size">The number of <see cref="T:TcHmiSrv.Command"/>s that should be reserved.</param>
        </member>
        <member name="M:TcHmiSrv.CommandGroup.clear">
            <summary>
            Removes all <see cref="T:TcHmiSrv.Command"/>s from the <see cref="T:TcHmiSrv.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.Domain">
            <summary>
            Gets or sets the name of the domain.
            </summary>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.Result">
            <summary>
            Gets or sets the group result.
            </summary>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.BeginVector">
            <summary>
            A <see cref="T:TcHmiSrv.ValueVectorIterator"/> to the begin of the vector.
            </summary>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.EndVector">
            <summary>
            A <see cref="T:TcHmiSrv.ValueVectorIterator"/> to the end of the vector.
            </summary>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.Size">
            <summary>
            Gets the number of <see cref="T:TcHmiSrv.Command"/>s in the <see cref="T:TcHmiSrv.CommandGroup"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.Empty">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.CommandGroup"/> is empty.
            </summary>
        </member>
        <member name="P:TcHmiSrv.CommandGroup.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.CommandGroup"/> is set.
            </summary>
        </member>
        <member name="F:TcHmiSrv.CommandOption.CommandOption_Poll">
            <summary>
            Send response with every tick, even if nothing changed.
            </summary>
        </member>
        <member name="F:TcHmiSrv.CommandOption.CommandOption_UniqueHash">
            <summary>
            Subscriptions will not be merged if this is set.
            </summary>
        </member>
        <member name="F:TcHmiSrv.CommandOption.CommandOption_ForceSingleWrite">
            <summary>
            This needs to be set for all commands writing the symbol to work.
            </summary>
        </member>
        <member name="F:TcHmiSrv.CommandOption.CommandOption_Check">
            <summary>
            Do not get read value, just check access rights for this command.
            </summary>
        </member>
        <member name="F:TcHmiSrv.CommandOption.CommandOption_ValidateRead">
            <summary>
            Validate outgoing values too.
            </summary>
        </member>
        <member name="M:TcHmiSrv.CommandVectorIterator.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.CommandVectorIterator"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.CommandVectorIterator"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.CommandVectorIterator"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.CommandVectorIterator.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.CommandVectorIterator"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.Context">
            <summary>
            Holds information about the current application context.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Context.op_Equality(TcHmiSrv.Context,TcHmiSrv.Context)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Context"/> is equal to the current <see cref="T:TcHmiSrv.Context"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Context"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Context"/> to compare with the current <see cref="T:TcHmiSrv.Context"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Context"/> is equal to the current <see cref="T:TcHmiSrv.Context"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Context.op_Inequality(TcHmiSrv.Context,TcHmiSrv.Context)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Context"/> is not equal to the current <see cref="T:TcHmiSrv.Context"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Context"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Context"/> to compare with the current <see cref="T:TcHmiSrv.Context"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Context"/> is not equal to the current <see cref="T:TcHmiSrv.Context"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Context.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Context"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Context"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Context"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Context.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Context"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Context.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Context"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Context.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Context"/> class based on another <see cref="T:TcHmiSrv.Context"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Context"/>.</param>
        </member>
        <member name="P:TcHmiSrv.Context.Session">
            <summary>
            Gets or sets the <see cref="P:TcHmiSrv.Context.Session"/> of the currently active user.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Context.RequestType">
            <summary>
            Gets or sets the type of the request that is currently being executed.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Context.Domain">
            <summary>
            Gets or sets the currently active domain.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Context.Hash">
            <summary>
            Gets or sets a hash value to identify identical <see cref="T:TcHmiSrv.Command"/> sets.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Context.SubscriptionId">
            <summary>
            Gets or sets an identifier for subscriptions.
            </summary>
        </member>
        <member name="F:TcHmiSrv.EndpointInfo.EndpointInfo_Local">
            <summary>
            Connected endpoint is the local machine.
            </summary>
        </member>
        <member name="F:TcHmiSrv.EndpointInfo.EndpointInfo_Remote">
            <summary>
            Connected endpoint is a remote machine.
            </summary>
        </member>
        <member name="F:TcHmiSrv.EndpointInfo.EndpointInfo_Internal">
            <summary>
            Internal call.
            </summary>
        </member>
        <member name="F:TcHmiSrv.EndpointInfo.EndpointInfo_Persistent">
            <summary>
            Connected endpoint is permanently logged in.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Event">
            <summary>
            Holds data for an event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Event.op_Equality(TcHmiSrv.Event,TcHmiSrv.Event)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Event"/> is equal to the current <see cref="T:TcHmiSrv.Event"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Event"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Event"/> to compare with the current <see cref="T:TcHmiSrv.Event"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Event"/> is equal to the current <see cref="T:TcHmiSrv.Event"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Event.op_Inequality(TcHmiSrv.Event,TcHmiSrv.Event)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Event"/> is not equal to the current <see cref="T:TcHmiSrv.Event"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Event"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Event"/> to compare with the current <see cref="T:TcHmiSrv.Event"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Event"/> is not equal to the current <see cref="T:TcHmiSrv.Event"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Event.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Event"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Event"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Event"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Event.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Event"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Event.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Event"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Event.#ctor(TcHmiSrv.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Event"/> class based on another <see cref="T:TcHmiSrv.Event"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Event"/>.</param>
        </member>
        <member name="P:TcHmiSrv.Event.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Event"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Event.TimeReceived">
            <summary>
            Gets or sets the time the event was received by the server.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Event.Session">
            <summary>
            Gets or sets the <see cref="P:TcHmiSrv.Event.Session"/> of the <see cref="T:TcHmiSrv.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Event.Payload">
            <summary>
            Gets or sets the payload of the <see cref="T:TcHmiSrv.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Event.Name">
            <summary>
            Gets or sets the name of the <see cref="T:TcHmiSrv.Event"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Event.Domain">
            <summary>
            Gets or sets the domain of the <see cref="T:TcHmiSrv.Event"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.EventChangeType">
            <summary>
            Represents how an <see cref="T:TcHmiSrv.Event"/> can change.
            </summary>
        </member>
        <member name="T:TcHmiSrv.ILocalizable">
            <summary>
            Declares an interface for a localizable object that holds a language variable and parameters.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ILocalizable.op_Equality(TcHmiSrv.ILocalizable,TcHmiSrv.ILocalizable)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.ILocalizable"/> is equal to the current <see cref="T:TcHmiSrv.ILocalizable"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.ILocalizable"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.ILocalizable"/> to compare with the current <see cref="T:TcHmiSrv.ILocalizable"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.ILocalizable"/> is equal to the current <see cref="T:TcHmiSrv.ILocalizable"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ILocalizable.op_Inequality(TcHmiSrv.ILocalizable,TcHmiSrv.ILocalizable)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.ILocalizable"/> is not equal to the current <see cref="T:TcHmiSrv.ILocalizable"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.ILocalizable"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.ILocalizable"/> to compare with the current <see cref="T:TcHmiSrv.ILocalizable"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.ILocalizable"/> is not equal to the current <see cref="T:TcHmiSrv.ILocalizable"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ILocalizable.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ILocalizable"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.ILocalizable"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ILocalizable"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ILocalizable.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.ILocalizable"/>.</returns>
        </member>
        <member name="P:TcHmiSrv.ILocalizable.Name">
            <summary>
            Gets or sets the name of the language variable.
            </summary>
        </member>
        <member name="P:TcHmiSrv.ILocalizable.Domain">
            <summary>
            Gets the domain of the language variable. The language file of this domain will be used for localization.
            </summary>
        </member>
        <member name="P:TcHmiSrv.ILocalizable.Parameters">
            <summary>
            Gets the parameters of the <see cref="T:TcHmiSrv.ILocalizable"/>. The parameter names have to match the placeholders in the localization string.
            </summary>
        </member>
        <member name="P:TcHmiSrv.ILocalizable.Type">
            <summary>
            Gets the <see cref="T:TcHmiSrv.ValueType"/> of the <see cref="T:TcHmiSrv.ILocalizable"/> that will be usually <see cref="F:TcHmiSrv.ValueType.ValueType_Message"/> or <see cref="F:TcHmiSrv.ValueType.ValueType_Alarm"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.ILocalizable.Severity">
            <summary>
            Gets the <see cref="P:TcHmiSrv.ILocalizable.Severity"/> of the <see cref="T:TcHmiSrv.ILocalizable"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvAlarmProviderListener">
            <summary>
            Allows to listen on provided <see cref="T:TcHmiSrv.Alarm"/>s.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvAlarmProviderListener.on_confirm(TcHmiSrv.Context,TcHmiSrv.Alarm)">
            <summary>
            Called when an <see cref="T:TcHmiSrv.Alarm"/> is confirmed.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the confirmation.</param>
            <param name="alm">The <see cref="T:TcHmiSrv.Alarm"/> that is confirmed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the confirmation succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvAlarmProviderListener.on_initialize_alarm_list(TcHmiSrv.Context)">
            <summary>
            Called when the <see cref="T:TcHmiSrv.Alarm"/> list is initialized.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the initialization.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the initialization succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvAlarmProviderListener.on_list_events(TcHmiSrv.Context,TcHmiSrv.Value)">
            <summary>
            Called when the <see cref="T:TcHmiSrv.Event"/>s are listed.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.Event"/>s are listed.</param>
            <param name="evts">A <see cref="T:TcHmiSrv.Value"/> that contains the <see cref="T:TcHmiSrv.Event"/>s.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if listing the <see cref="T:TcHmiSrv.Event"/>s succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvAuthListener">
            <summary>
            Allows to implement own authorization extensions.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvAuthListener.on_login(TcHmiSrv.Context,TcHmiSrv.Value)">
            <summary>
            Called when a user trys to log in.
            </summary>
            <param name="ctx">A <see cref="T:TcHmiSrv.Context"/> containing information about the user who tries to log in.</param>
            <param name="value">A struct that describes the Json schema "Login" in TcHmiSrv.Config.json.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if login succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvAuthListener.on_logout(TcHmiSrv.Context)">
            <summary>
            Called when a user is being logged out.
            </summary>
            <param name="ctx">A <see cref="T:TcHmiSrv.Context"/> containing the currently logged in user.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if logout succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvConfigListener">
            <summary>
            Allows to interact with the extension configuration.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvConfigListener.before_change(TcHmiSrv.Context,System.String,TcHmiSrv.Value,System.String)">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Value"/> is changed.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            With complex data this method will be called for every leaf.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the change.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> that is about to be changed.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/> should be changed; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvConfigListener.before_delete(TcHmiSrv.Context,System.String,TcHmiSrv.Value,System.String)">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Value"/> is deleted.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, deletion will be aborted.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the deletion.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> that is about to be deleted.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the value should be deleted; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvConfigListener.before_rename(TcHmiSrv.Context,System.String,System.String,System.String)">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Value"/> is renamed.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, renaming will be aborted.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the renaming.</param>
            <param name="old_path">The old path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="new_path">The new path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/> should be renamed; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvConfigListener.on_change(TcHmiSrv.Context,System.String,System.String)">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Value"/> has been successfully changed.
            With complex data this method will be called for every leaf.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the change.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if changing the configuration <see cref="T:TcHmiSrv.Value"/>succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvConfigListener.on_delete(TcHmiSrv.Context,System.String,TcHmiSrv.Value,System.String)">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Value"/> has been deleted.
            With complex data this method will be called for every leaf.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the deletion.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="value">A copy of the deleted <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if deleting the configuration <see cref="T:TcHmiSrv.Value"/>succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvConfigListener.on_rename(TcHmiSrv.Context,System.String,System.String,System.String)">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Value"/> has been renamed.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the renaming.</param>
            <param name="old_path">The old path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="new_path">The new path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if renaming the configuration <see cref="T:TcHmiSrv.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvEventListener">
            <summary>
            Allows to interact with the eventing system of the server.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvEventListener.on_change(TcHmiSrv.Context,TcHmiSrv.Event)">
            <summary>
            Called when an <see cref="T:TcHmiSrv.Event"/> is changed.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the change.</param>
            <param name="evt">The <see cref="T:TcHmiSrv.Event"/> that has changed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if changing the <see cref="T:TcHmiSrv.Event"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvEventListener.on_request(TcHmiSrv.Context,System.String,TcHmiSrv.ILocalizable,TcHmiSrv.String)">
            <summary>
            Called when a event cannot be localized using the language file of the extension.
            This event can be used to implement dynamic localization.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the localization.</param>
            <param name="locale">A locale in BCP 47 representation.</param>
            <param name="obj">The <see cref="T:TcHmiSrv.ILocalizable"/> that needs to be localized.</param>
            <param name="localized"> The resulting localized <see cref="T:TcHmiSrv.String"/>.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if localizing the <see cref="T:TcHmiSrv.ILocalizable"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvEventListener.filter">
            <summary>
            Allows extension to filter events.
            </summary>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvExportListener">
            <summary>
            Allows to react on configuration export calls.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExportListener.before_export(TcHmiSrv.Context,System.String,TcHmiSrv.Value,TcHmiSrv.Value,System.String)">
            <summary>
            Called before an export is done.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            With complex data this method will be called for every leaf.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the export.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> that is about to be exported.</param>
            <param name="root">The root <see cref="T:TcHmiSrv.Value"/> containing the whole data that is going to be exported.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/> should be exported; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExportListener.before_import(TcHmiSrv.Context,System.String,TcHmiSrv.Value,TcHmiSrv.Value,System.String)">
            <summary>Called before an import is done.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            With complex data this method will be called for every leaf.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the export.</param>
            <param name="path">The path of the configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> that is about to be exported.</param>
            <param name="root">The root <see cref="T:TcHmiSrv.Value"/> containing the whole data that is going to be imported.</param>
            <param name="reference">The name of the JSON schema reference of the changed object.</param>
            <returns>A <see cref="T:TcHmiSrv.ResultPair"/> containing <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/> should be exported; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvExtHost">
            <summary>
            This interface is used to communicate with the server.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.send(TcHmiSrv.Context,TcHmiSrv.Message)">
            <summary>
            Adds or updates a <see cref="T:TcHmiSrv.Message"/>.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.Message"/> should be sent.</param>
            <param name="msg">The <see cref="T:TcHmiSrv.Message"/> that will be sent to the server and all current event listeners.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Message"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.send(TcHmiSrv.Context,TcHmiSrv.Event)">
            <summary>
            Adds or updates an <see cref="T:TcHmiSrv.Event"/>.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.Event"/> should be sent.</param>
            <param name="evt">The <see cref="T:TcHmiSrv.Event"/> that will be sent to the server and all current event listeners.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if sending the <see cref="T:TcHmiSrv.Event"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.exec(TcHmiSrv.Context,TcHmiSrv.CommandGroup)">
            <summary>
            Executes <see cref="T:TcHmiSrv.Command"/>s inside any domain.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the commands should be executed.</param>
            <param name="commands">A <see cref="T:TcHmiSrv.CommandGroup"/> containing a list of <see cref="T:TcHmiSrv.Command"/>s.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if executing the commands succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.exec(TcHmiSrv.Context,TcHmiSrv.Command)">
            <summary>
            Executes a single <see cref="T:TcHmiSrv.Command"/> in the domain of the specified <see cref="T:TcHmiSrv.Context"/>.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.Command"/> should be executed.</param>
            <param name="cmd">The <see cref="T:TcHmiSrv.Command"/> to be executed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if executing the <see cref="T:TcHmiSrv.Command"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.localize(TcHmiSrv.Context,TcHmiSrv.ILocalizable)">
            <summary>
            Localizes an <see cref="T:TcHmiSrv.ILocalizable"/>.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.ILocalizable"/> should be localized.</param>
            <param name="obj">The <see cref="T:TcHmiSrv.ILocalizable"/> to be localized.</param>
            <returns>A <see cref="T:TcHmiSrv.String"/> containing the localized text.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.register_listener(TcHmiSrv.Context,TcHmiSrv.ITcHmiSrvListener)">
            <summary>
            Registers an <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> at the server.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> that should be registered.</param>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.register_listener(TcHmiSrv.Context,TcHmiSrv.ITcHmiSrvListener,TcHmiSrv.Value)">
            <summary>
            Registers an <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> at the server using the specified settings.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> should be registered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> that should be registered.</param>
            <param name="settings">A <see cref="T:TcHmiSrv.Value"/> containing the settings that should be used at the registration.</param>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.unregister_listener(TcHmiSrv.Context,TcHmiSrv.ITcHmiSrvListener)">
            <summary>
            Unregisters an <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> at the server.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> should be unregistered.</param>
            <param name="handler">The <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> that should be unregistered.</param>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.unregister_listener(TcHmiSrv.ITcHmiSrvListener)">
            <summary>
            Unregisters an <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> at the server.
            </summary>
            <param name="handler">The <see cref="T:TcHmiSrv.ITcHmiSrvListener"/> that should be unregistered.</param>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.notify_listener(TcHmiSrv.Context,TcHmiSrv.AlarmChangeType,TcHmiSrv.Alarm)">
            <summary>
            Sends a notification if an <see cref="T:TcHmiSrv.Alarm"/> type changed.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> under which the <see cref="T:TcHmiSrv.Alarm"/> changed.</param>
            <param name="type">Contains the type of the change.</param>
            <param name="alm">The <see cref="T:TcHmiSrv.Alarm"/> that has changed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if sending the notification succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.set_config_value(TcHmiSrv.Context,System.String,TcHmiSrv.Value)">
            <summary>
            Adds an entry to a map or vector in the extension configuration or updates an existing configuration <see cref="T:TcHmiSrv.Value"/>.
            </summary>
            <param name="ctx">A <see cref="T:TcHmiSrv.Context"/> containing information about the user who tries to get a configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="path">The path of the <see cref="T:TcHmiSrv.Value"/> to be set.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> to be set or nullptr to delete the configuration <see cref="T:TcHmiSrv.Value"/> at specified path.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if setting the configuration <see cref="T:TcHmiSrv.Value"/> succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvExtHost.get_config_value(TcHmiSrv.Context,System.String)">
            <summary>
            Gets the configuration <see cref="T:TcHmiSrv.Value"/> at the specified path from the server.
            </summary>
            <param name="ctx">A <see cref="T:TcHmiSrv.Context"/> containing information about the user who tries to get a configuration <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="path">The path of the requested <see cref="T:TcHmiSrv.Value"/>.</param>
            <returns>The <see cref="T:TcHmiSrv.Value"/> at the specified path or a <see cref="T:TcHmiSrv.Value"/> containing <see cref="F:TcHmiSrv.ValueType.ValueType_Null"/>.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvListener">
            <summary>
            Listeners are called whenever the corresponding event in the server occurs.
            </summary>
        </member>
        <member name="P:TcHmiSrv.ITcHmiSrvListener.Type">
            <summary>
            Gets the type of the listener.
            </summary>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvRequestListener">
            <summary>
            Performs read write requests and subscriptions.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvRequestListener.on_request(TcHmiSrv.Context,TcHmiSrv.CommandGroup)">
            <summary>
            Called when a client requests a symbol from the extension domain.
            If the request is a subscription, this method will be called multiple times.
            Inside a subscription the data will only be sent to clients if either the read value or the return codes changed.
            This will be detected automatically, so do not use set the result or read value unless the data has changed.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the request.</param>
            <param name="commands">A <see cref="T:TcHmiSrv.CommandGroup"/> containing a list of <see cref="T:TcHmiSrv.Command"/>s.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the request succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvSessionListener">
            <summary>
            Allows to observe the servers connection state.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvSessionListener.on_login(TcHmiSrv.Context)">
            <summary>
            Triggered when a user is logged in.
            </summary>
            <param name="ctx">Contains the clients session information.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if login succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvSessionListener.on_logout(TcHmiSrv.Context)">
            <summary>
            Triggered when a user is logged out.
            </summary>
            <param name="ctx">Contains the clients session information.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if logout succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvSessionListener.on_create_websocket(TcHmiSrv.Context)">
            <summary>
            Triggered when a new websocket connection is opened.
            </summary>
            <param name="ctx">Contains the clients session information including the id of the socket.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if creating the websocket succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvSessionListener.on_close_websocket(TcHmiSrv.Context)">
            <summary>
            Triggered when a websocket connection is closed.
            </summary>
            <param name="ctx">Contains the clients session information including the id of the socket.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if closing the websocket succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvShutdownListener">
            <summary>
            Allows to get notified when the server is shutting down.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvShutdownListener.on_shutdown(TcHmiSrv.Context)">
            <summary>
            Called when the server is shutting down. After exiting this function the extension will be unloaded.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> of the shutdown.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if shutting down the extension succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.ITcHmiSrvSubscriptionListener">
            <summary>
            Allows to take full control over the subscription loops.
            If this interface is not implemented, subscriptions will just call the
            </summary>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvSubscriptionListener.on_subscribe(TcHmiSrv.Context)">
            <summary>
            Called once when a client opens a new subscription.
            The subscription will call the on_request method of <see cref="T:TcHmiSrv.ITcHmiSrvRequestListener"/> once per interval.
            </summary>
            <param name="ctx">A <see cref="T:TcHmiSrv.Context"/> containing information about the user who opened the subscription.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if registering the subscription succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.ITcHmiSrvSubscriptionListener.on_unsubscribe(TcHmiSrv.Context)">
            <summary>
            Called when a client closes a subscription.
            </summary>
            <param name="ctx">A <see cref="T:TcHmiSrv.Context"/> containing information about the user who closed the subscription.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if unregistering the subscription succeeded; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="T:TcHmiSrv.Message">
            <summary>
            Holds data for a message.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Message.op_Equality(TcHmiSrv.Message,TcHmiSrv.Message)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Message"/> is equal to the current <see cref="T:TcHmiSrv.Message"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Message"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Message"/> to compare with the current <see cref="T:TcHmiSrv.Message"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Message"/> is equal to the current <see cref="T:TcHmiSrv.Message"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Message.op_Inequality(TcHmiSrv.Message,TcHmiSrv.Message)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Message"/> is not equal to the current <see cref="T:TcHmiSrv.Message"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Message"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Message"/> to compare with the current <see cref="T:TcHmiSrv.Message"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Message"/> is not equal to the current <see cref="T:TcHmiSrv.Message"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Message.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Message"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Message"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Message"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Message.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Message"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Message"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Message.#ctor(TcHmiSrv.Context,TcHmiSrv.Severity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Message"/> class with the specified <see cref="T:TcHmiSrv.Context"/>, <see cref="P:TcHmiSrv.Message.Severity"/> and name.
            </summary>
            <param name="ctx">The <see cref="T:TcHmiSrv.Context"/> to be set.</param>
            <param name="severity">The <see cref="P:TcHmiSrv.Message.Severity"/> to be set.</param>
            <param name="name">The name to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Message.#ctor(TcHmiSrv.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Message"/> class based on another <see cref="T:TcHmiSrv.Message"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Message"/>.</param>
        </member>
        <member name="P:TcHmiSrv.Message.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Message"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Message.TimeRaised">
            <summary>
            Gets or sets the time the <see cref="T:TcHmiSrv.Message"/> was raised.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Message.Severity">
            <summary>
            Gets or sets the <see cref="P:TcHmiSrv.Message.Severity"/> of the <see cref="T:TcHmiSrv.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Message.Parameters">
            <summary>
            Gets the parameters of the <see cref="T:TcHmiSrv.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Message.Name">
            <summary>
            Gets or sets the name of the <see cref="T:TcHmiSrv.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Message.Domain">
            <summary>
            Gets or sets the domain that triggered the <see cref="T:TcHmiSrv.Message"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Message.Type">
            <summary>
            Gets the type of the <see cref="T:TcHmiSrv.Message"/>. (<see cref="F:TcHmiSrv.ValueType.ValueType_Message"/>)
            </summary>
        </member>
        <member name="T:TcHmiSrv.Range">
            <summary>
            Represents the lower and upper range of a number.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Range.op_Equality(TcHmiSrv.Range,TcHmiSrv.Range)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Range"/> is equal to the current <see cref="T:TcHmiSrv.Range"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Range"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Range"/> to compare with the current <see cref="T:TcHmiSrv.Range"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Range"/> is equal to the current <see cref="T:TcHmiSrv.Range"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Range.op_Inequality(TcHmiSrv.Range,TcHmiSrv.Range)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Range"/> is not equal to the current <see cref="T:TcHmiSrv.Range"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Range"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Range"/> to compare with the current <see cref="T:TcHmiSrv.Range"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Range"/> is not equal to the current <see cref="T:TcHmiSrv.Range"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Range.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Range"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Range"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Range"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Range.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Range"/>.</returns>
        </member>
        <member name="P:TcHmiSrv.Range.Lower">
            <summary>
            Represents the lower range of a number.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Range.Upper">
            <summary>
            Represents the upper range of a number.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Range.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Range"/> class.
            </summary>
        </member>
        <member name="T:TcHmiSrv.ResultPair">
            <summary>
            Holds results of API calls.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ResultPair.op_Equality(TcHmiSrv.ResultPair,TcHmiSrv.ResultPair)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.ResultPair"/> is equal to the current <see cref="T:TcHmiSrv.ResultPair"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.ResultPair"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.ResultPair"/> to compare with the current <see cref="T:TcHmiSrv.ResultPair"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.ResultPair"/> is equal to the current <see cref="T:TcHmiSrv.ResultPair"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ResultPair.op_Inequality(TcHmiSrv.ResultPair,TcHmiSrv.ResultPair)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.ResultPair"/> is not equal to the current <see cref="T:TcHmiSrv.ResultPair"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.ResultPair"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.ResultPair"/> to compare with the current <see cref="T:TcHmiSrv.ResultPair"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.ResultPair"/> is not equal to the current <see cref="T:TcHmiSrv.ResultPair"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ResultPair.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ResultPair"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.ResultPair"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ResultPair"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ResultPair.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.ResultPair"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.ResultPair.#ctor">
            <summary>
            Initializes a new empty instance of the <see cref="T:TcHmiSrv.ResultPair"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ResultPair.#ctor(TcHmiSrv.ErrorValue)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.ResultPair"/> class.
            </summary>
            <param name="result">The result code, see <see cref="T:TcHmiSrv.ErrorValue"/>.</param>
        </member>
        <member name="M:TcHmiSrv.ResultPair.#ctor(TcHmiSrv.ErrorValue,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.ResultPair"/> class.
            </summary>
            <param name="result">The result code, see <see cref="T:TcHmiSrv.ErrorValue"/>.</param>
            <param name="text">The textual representation or further description of the result code.</param>
        </member>
        <member name="M:TcHmiSrv.ResultPair.#ctor(TcHmiSrv.ResultPair)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.ResultPair"/> class based on another <see cref="T:TcHmiSrv.ResultPair"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.ResultPair"/>.</param>
        </member>
        <member name="P:TcHmiSrv.ResultPair.Text">
            <summary>
            Gets or sets the textual representation or further description of the result code.
            </summary>
        </member>
        <member name="P:TcHmiSrv.ResultPair.Result">
            <summary>
            Gets or sets the <see cref="T:TcHmiSrv.ErrorValue"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Session">
            <summary>
            Holds session information for the active user.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Session.op_Equality(TcHmiSrv.Session,TcHmiSrv.Session)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Session"/> is equal to the current <see cref="T:TcHmiSrv.Session"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Session"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Session"/> to compare with the current <see cref="T:TcHmiSrv.Session"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Session"/> is equal to the current <see cref="T:TcHmiSrv.Session"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Session.op_Inequality(TcHmiSrv.Session,TcHmiSrv.Session)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Session"/> is not equal to the current <see cref="T:TcHmiSrv.Session"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Session"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Session"/> to compare with the current <see cref="T:TcHmiSrv.Session"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Session"/> is not equal to the current <see cref="T:TcHmiSrv.Session"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Session.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Session"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Session"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Session"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Session.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Session"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Session.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Session"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Session.#ctor(TcHmiSrv.Session)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Session"/> class based on another <see cref="T:TcHmiSrv.Session"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Session"/>.</param>
        </member>
        <member name="P:TcHmiSrv.Session.Id">
            <summary>
            Gets or sets the id of the <see cref="T:TcHmiSrv.Session"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Session.User">
            <summary>
            Gets or sets the user name.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Session.Locale">
            <summary>
            Gets or sets the locale of the user in BCP 47 representation.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Session.SocketId">
            <summary>
            Gets or sets the socket id of the <see cref="T:TcHmiSrv.Session"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Session.EndpointInfo">
            <summary>
            Gets or sets the endpoint information.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Severity">
            <summary>
            See: https://msdn.microsoft.com/en-us/library/office/ff604025(v=office.14).aspx
            </summary>
        </member>
        <member name="F:TcHmiSrv.Severity.Severity_Verbose">
            <summary>
            Verbose
            </summary>
        </member>
        <member name="F:TcHmiSrv.Severity.Severity_Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="F:TcHmiSrv.Severity.Severity_Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:TcHmiSrv.Severity.Severity_Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:TcHmiSrv.Severity.Severity_Critical">
            <summary>
            Critical
            </summary>
        </member>
        <member name="T:TcHmiSrv.String">
            <summary>
            Represents an object to hold string variables.
            </summary>
        </member>
        <member name="M:TcHmiSrv.String.op_Equality(TcHmiSrv.String,TcHmiSrv.String)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.String"/> is equal to the current <see cref="T:TcHmiSrv.String"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.String"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.String"/> to compare with the current <see cref="T:TcHmiSrv.String"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.String"/> is equal to the current <see cref="T:TcHmiSrv.String"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.String.op_Inequality(TcHmiSrv.String,TcHmiSrv.String)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.String"/> is not equal to the current <see cref="T:TcHmiSrv.String"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.String"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.String"/> to compare with the current <see cref="T:TcHmiSrv.String"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.String"/> is not equal to the current <see cref="T:TcHmiSrv.String"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.String.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.String"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.String"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.String"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.String.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.String.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.String"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.String.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.String"/> class with the specified name.
            </summary>
            <param name="name">The name to be set.</param>
        </member>
        <member name="M:TcHmiSrv.String.#ctor(TcHmiSrv.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.String"/> class based on another <see cref="T:TcHmiSrv.String"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.String"/>.</param>
        </member>
        <member name="P:TcHmiSrv.String.Name">
            <summary>
            Gets or sets the name of the <see cref="T:TcHmiSrv.String"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.String.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.String"/> is set.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAlarmProviderListener">
            <summary>
            Allows to listen on provided <see cref="T:TcHmiSrv.Alarm"/>s.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirm">
            <summary>
            Called when an <see cref="T:TcHmiSrv.Alarm"/> is confirmed.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnInitializeAlarmList">
            <summary>
            Called when the <see cref="T:TcHmiSrv.Alarm"/> list is initialized.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEvents">
            <summary>
            Called when the <see cref="T:TcHmiSrv.Event"/>s are listed.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirmEventHandler">
            <summary>
            Represents the method that handles an on confirm event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirmEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnInitializeAlarmListEventHandler">
            <summary>
            Represents the method that handles an on initialize alarm list event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnInitializeAlarmListEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEventsEventHandler">
            <summary>
            Represents the method that handles an on list events event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEventsEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirmEventArgs">
            <summary>
            Provides data for an on confirm event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirmEventArgs.#ctor(TcHmiSrv.Context,TcHmiSrv.Alarm)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirmEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirmEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnConfirmEventArgs.Alarm">
            <summary>
            Gets the current alarm.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnInitializeAlarmListEventArgs">
            <summary>
            Provides data for an on initialize alarm list event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnInitializeAlarmListEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnInitializeAlarmListEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnInitializeAlarmListEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEventsEventArgs">
            <summary>
            Provides data for an on list events event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEventsEventArgs.#ctor(TcHmiSrv.Context,TcHmiSrv.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEventsEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEventsEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAlarmProviderListener.OnListEventsEventArgs.Events">
            <summary>
            Gets the current events.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAuthListener">
            <summary>
            Allows to implement own authorization extensions.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvAuthListener.OnLogin">
            <summary>
            Called when a user trys to log in.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvAuthListener.OnLogout">
            <summary>
            Called when a user is being logged out.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAuthListener.OnLoginEventHandler">
            <summary>
            Represents the method that handles an on login event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvAuthListener.OnLoginEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAuthListener.OnLogoutEventHandler">
            <summary>
            Represents the method that handles an on logout event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvAuthListener.OnLogoutEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAuthListener.OnLoginEventArgs">
            <summary>
            Provides data for an on login event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvAuthListener.OnLoginEventArgs.#ctor(TcHmiSrv.Context,TcHmiSrv.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvAuthListener.OnLoginEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAuthListener.OnLoginEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAuthListener.OnLoginEventArgs.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvAuthListener.OnLogoutEventArgs">
            <summary>
            Provides data for an on logout event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvAuthListener.OnLogoutEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvAuthListener.OnLogoutEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvAuthListener.OnLogoutEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener">
            <summary>
            Allows to interact with the extension configuration.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvConfigListener.BeforeChange">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Value"/> is changed.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            With complex data this method will be called for every leaf.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvConfigListener.BeforeDelete">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Value"/> is deleted.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvConfigListener.BeforeRename">
            <summary>
            Called before a configuration <see cref="T:TcHmiSrv.Value"/> is renamed.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvConfigListener.OnChange">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Value"/> has been successfully changed.
            With complex data this method will be called for every leaf.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvConfigListener.OnDelete">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Value"/> has been deleted.
            With complex data this method will be called for every leaf.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvConfigListener.OnRename">
            <summary>
            Called after a configuration <see cref="T:TcHmiSrv.Value"/> has been renamed.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventHandler">
            <summary>
            Represents the method that handles a before change event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventHandler">
            <summary>
            Represents the method that handles a before delete event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventHandler">
            <summary>
            Represents the method that handles a before rename event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventHandler">
            <summary>
            Represents the method that handles an on change event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventHandler">
            <summary>
            Represents the method that handles an on delete event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventHandler">
            <summary>
            Represents the method that handles an on rename event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs"/> class that contains the event data.</param>
            <returns></returns>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs">
            <summary>
            Provides data for a before change event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs.#ctor(TcHmiSrv.Context,System.String,TcHmiSrv.Value,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs.Path">
            <summary>
            Gets the current path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeChangeEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs">
            <summary>
            Provides data for a before delete event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs.#ctor(TcHmiSrv.Context,System.String,TcHmiSrv.Value,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs.Path">
            <summary>
            Gets the current path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeDeleteEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs">
            <summary>
            Provides data for a before rename event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs.#ctor(TcHmiSrv.Context,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs.OldPath">
            <summary>
            Gets the old path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs.NewPath">
            <summary>
            Gets the new path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.BeforeRenameEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventArgs">
            <summary>
            Provides data for an on change event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventArgs.#ctor(TcHmiSrv.Context,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventArgs.Path">
            <summary>
            Gets the current path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnChangeEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs">
            <summary>
            Provides data for an on delete event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs.#ctor(TcHmiSrv.Context,System.String,TcHmiSrv.Value,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs.Path">
            <summary>
            Gets the current path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnDeleteEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs">
            <summary>
            Provides data for an on rename event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs.#ctor(TcHmiSrv.Context,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs.OldPath">
            <summary>
            Gets the old path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs.NewPath">
            <summary>
            Gets the new path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvConfigListener.OnRenameEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvEventListener">
            <summary>
            Allows to interact with the eventing system of the server.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvEventListener.OnChange">
            <summary>
            Called when an <see cref="T:TcHmiSrv.Event"/> is changed.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvEventListener.OnRequest">
            <summary>
            Called when a event cannot be localized using the language file of the extension.
            This event can be used to implement dynamic localization.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvEventListener.Filter">
            <summary>
            Allows extension to filter events.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvEventListener.OnChangeEventHandler">
            <summary>
            Represents the method that handles an on change event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvEventListener.OnChangeEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventHandler">
            <summary>
            Represents the method that handles an on request event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvEventListener.FilterEventHandler">
            <summary>
            Represents the method that handles a filter event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:System.EventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvEventListener.OnChangeEventArgs">
            <summary>
            Provides data for an on change event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvEventListener.OnChangeEventArgs.#ctor(TcHmiSrv.Context,TcHmiSrv.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvEventListener.OnChangeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvEventListener.OnChangeEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvEventListener.OnChangeEventArgs.Event">
            <summary>
            Gets the current event.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs">
            <summary>
            Provides data for an on request event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs.#ctor(TcHmiSrv.Context,System.String,TcHmiSrv.ILocalizable,TcHmiSrv.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs.Locale">
            <summary>
            Gets the current locale.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs.Object">
            <summary>
            Gets the current localizeable object.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvEventListener.OnRequestEventArgs.Localized">
            <summary>
            Gets the current localized string.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvExportListener">
            <summary>
            Allows to react on configuration export calls.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvExportListener.BeforeExport">
            <summary>
            Called before an export is done.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            With complex data this method will be called for every leaf.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvExportListener.BeforeImport">
            <summary>
            Called before an import is done.
            If the call is not answered with <see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/>, the write will be aborted.
            With complex data this method will be called for every leaf.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventHandler">
            <summary>
            Represents the method that handles a before export event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventHandler">
            <summary>
            Represents the method that handles a before import event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs">
            <summary>
            Provides data for a before export event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs.#ctor(TcHmiSrv.Context,System.String,TcHmiSrv.Value,TcHmiSrv.Value,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs.Path">
            <summary>
            Gets the current path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs.Root">
            <summary>
            Gets the root value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeExportEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs">
            <summary>
            Provides data for a before import event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs.#ctor(TcHmiSrv.Context,System.String,TcHmiSrv.Value,TcHmiSrv.Value,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs.Path">
            <summary>
            Gets the current path.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs.Value">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs.Root">
            <summary>
            Gets the root value.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvExportListener.BeforeImportEventArgs.Reference">
            <summary>
            Gets the reference.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvRequestListener">
            <summary>
            Performs read write requests and subscriptions.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvRequestListener.OnRequest">
            <summary>
            Called when a client requests a symbol from the extension domain.
            If the request is a subscription, this method will be called multiple times.
            Inside a subscription the data will only be sent to clients if either the read value or the return codes changed.
            This will be detected automatically, so do not use set the result or read value unless the data has changed.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvRequestListener.OnRequestEventHandler">
            <summary>
            Represents the method that handles an on request event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvRequestListener.OnRequestEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvRequestListener.OnRequestEventArgs">
            <summary>
            Provides data for an on request event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvRequestListener.OnRequestEventArgs.#ctor(TcHmiSrv.Context,TcHmiSrv.CommandGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvRequestListener.OnRequestEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvRequestListener.OnRequestEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvRequestListener.OnRequestEventArgs.Commands">
            <summary>
            Gets the current commands.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener">
            <summary>
            Allows to observe the servers connection state.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvSessionListener.OnLogin">
            <summary>
            Triggered when a user is logged in.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvSessionListener.OnLogout">
            <summary>
            Triggered when a user is logged out.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvSessionListener.OnCreateWebsocket">
            <summary>
            Triggered when a new websocket connection is opened.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvSessionListener.OnCloseWebsocket">
            <summary>
            Triggered when a websocket connection is closed.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnLoginEventHandler">
            <summary>
            Represents the method that handles an on login event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnLoginEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnLogoutEventHandler">
            <summary>
            Represents the method that handles an on logout event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnLogoutEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnCreateWebsocketEventHandler">
            <summary>
            Represents the method that handles an on create websocket event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnCreateWebsocketEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnCloseWebsocketEventHandler">
            <summary>
            Represents the method that handles an on close websocket event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnCloseWebsocketEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnLoginEventArgs">
            <summary>
            Provides data for an on login event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvSessionListener.OnLoginEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnLoginEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvSessionListener.OnLoginEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnLogoutEventArgs">
            <summary>
            Provides data for an on logout event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvSessionListener.OnLogoutEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnLogoutEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvSessionListener.OnLogoutEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnCreateWebsocketEventArgs">
            <summary>
            Provides data for an on create websocket event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvSessionListener.OnCreateWebsocketEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnCreateWebsocketEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvSessionListener.OnCreateWebsocketEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSessionListener.OnCloseWebsocketEventArgs">
            <summary>
            Provides data for an on close websocket event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvSessionListener.OnCloseWebsocketEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvSessionListener.OnCloseWebsocketEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvSessionListener.OnCloseWebsocketEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvShutdownListener">
            <summary>
            Allows to get notified when the server is shutting down.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvShutdownListener.OnShutdown">
            <summary>
            Called when the server is shutting down. After exiting this function the extension will be unloaded.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvShutdownListener.OnShutdownEventHandler">
            <summary>
            Represents the method that handles an on shutdown event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvShutdownListener.OnShutdownEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvShutdownListener.OnShutdownEventArgs">
            <summary>
            Provides data for an on shutdown event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvShutdownListener.OnShutdownEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvShutdownListener.OnShutdownEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvShutdownListener.OnShutdownEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSubscriptionListener">
            <summary>
            Allows to take full control over the subscription loops.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvSubscriptionListener.OnSubscribe">
            <summary>
            Called once when a client opens a new subscription.
            The subscription will call the on_request method of <see cref="T:TcHmiSrv.ITcHmiSrvRequestListener"/> once per interval.
            </summary>
        </member>
        <member name="E:TcHmiSrv.TcHmiSrvSubscriptionListener.OnUnsubscribe">
            <summary>
            Called when a client closes a subscription.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnSubscribeEventHandler">
            <summary>
            Represents the method that handles an on subscribe event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnSubscribeEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnUnsubscribeEventHandler">
            <summary>
            Represents the method that handles an on unsubscribe event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">An instance of the <see cref="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnUnsubscribeEventArgs"/> class that contains the event data.</param>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnSubscribeEventArgs">
            <summary>
            Provides data for an on subscribe event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvSubscriptionListener.OnSubscribeEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnSubscribeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvSubscriptionListener.OnSubscribeEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnUnsubscribeEventArgs">
            <summary>
            Provides data for an on unsubscribe event.
            </summary>
        </member>
        <member name="M:TcHmiSrv.TcHmiSrvSubscriptionListener.OnUnsubscribeEventArgs.#ctor(TcHmiSrv.Context)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.TcHmiSrvSubscriptionListener.OnUnsubscribeEventArgs"/> class.
            </summary>
        </member>
        <member name="P:TcHmiSrv.TcHmiSrvSubscriptionListener.OnUnsubscribeEventArgs.Context">
            <summary>
            Gets the current context.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Timespan">
            <summary>
            Holds a period of time in nanoseconds.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Timespan.op_Implicit(TcHmiSrv.Timespan)~System.TimeSpan">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Timespan"/> class to the appropriate instance of the <see cref="T:System.TimeSpan"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Timespan"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Timespan.op_Implicit(System.TimeSpan)~TcHmiSrv.Timespan">
            <summary>
            Converts an instance of the <see cref="T:System.TimeSpan"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Timespan"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.TimeSpan"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Timespan.op_Equality(TcHmiSrv.Timespan,TcHmiSrv.Timespan)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Timespan"/> is equal to the current <see cref="T:TcHmiSrv.Timespan"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Timespan"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Timespan"/> to compare with the current <see cref="T:TcHmiSrv.Timespan"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Timespan"/> is equal to the current <see cref="T:TcHmiSrv.Timespan"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Timespan.op_Inequality(TcHmiSrv.Timespan,TcHmiSrv.Timespan)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Timespan"/> is not equal to the current <see cref="T:TcHmiSrv.Timespan"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Timespan"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Timespan"/> to compare with the current <see cref="T:TcHmiSrv.Timespan"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Timespan"/> is not equal to the current <see cref="T:TcHmiSrv.Timespan"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Timespan.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Timespan"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Timespan"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Timespan"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Timespan.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Timespan"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Timespan.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Timespan"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Timespan.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Timespan"/> class with the specified number of nanoseconds.
            </summary>
            <param name="nanoseconds">The nanoseconds to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Timespan.#ctor(TcHmiSrv.Timespan)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Timespan"/> class based on another <see cref="T:TcHmiSrv.Timespan"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Timespan"/>.</param>
        </member>
        <member name="P:TcHmiSrv.Timespan.Seconds">
            <summary>
            Gets the number of seconds from the current <see cref="T:TcHmiSrv.Timespan"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Timespan.Milliseconds">
            <summary>
            Gets the number of milliseconds from the current <see cref="T:TcHmiSrv.Timespan"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Timespan.Nanoseconds">
            <summary>
            Gets the number of nanoseconds from the current <see cref="T:TcHmiSrv.Timespan"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Timestamp">
            <summary>
            Holds a time in nanoseconds since 1 January 1970 or a duration in nanoseconds.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Timestamp.op_Implicit(TcHmiSrv.Timestamp)~System.DateTime">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Timestamp"/> class to the appropriate instance of the <see cref="T:System.DateTime"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Timestamp"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Timestamp.op_Implicit(System.DateTime)~TcHmiSrv.Timestamp">
            <summary>
            Converts an instance of the <see cref="T:System.DateTime"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Timestamp"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.DateTime"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Timestamp.op_Equality(TcHmiSrv.Timestamp,TcHmiSrv.Timestamp)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Timestamp"/> is equal to the current <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Timestamp"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Timestamp"/> to compare with the current <see cref="T:TcHmiSrv.Timestamp"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Timestamp"/> is equal to the current <see cref="T:TcHmiSrv.Timestamp"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Timestamp.op_Inequality(TcHmiSrv.Timestamp,TcHmiSrv.Timestamp)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Timestamp"/> is not equal to the current <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Timestamp"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Timestamp"/> to compare with the current <see cref="T:TcHmiSrv.Timestamp"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Timestamp"/> is not equal to the current <see cref="T:TcHmiSrv.Timestamp"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Timestamp.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Timestamp"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Timestamp"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Timestamp.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Timestamp"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Timestamp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Timestamp"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Timestamp.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Timestamp"/> class with the specified number of nanoseconds.
            </summary>
            <param name="nanoseconds">The nanoseconds to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Timestamp.#ctor(TcHmiSrv.Timestamp)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Timestamp"/> class based on another <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Timestamp"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Timestamp.from_unix_time(System.Int32)">
            <summary>
            Creates a <see cref="T:TcHmiSrv.Timestamp"/> from an unix timestamp.
            </summary>
            <param name="timestamp">The unix timestamp.</param>
            <returns>A <see cref="T:TcHmiSrv.Timestamp"/> that represents the given unix timestamp.</returns>
        </member>
        <member name="M:TcHmiSrv.Timestamp.from_file_time(System.Int64)">
            <summary>
            Creates a <see cref="T:TcHmiSrv.Timestamp"/> from a Windows file time.
            </summary>
            <param name="filetime">The Windows file time.</param>
            <returns>A <see cref="T:TcHmiSrv.Timestamp"/> that represents the given Windows file time.</returns>
        </member>
        <member name="M:TcHmiSrv.Timestamp.from_milliseconds(System.Int64)">
            <summary>
            Creates a <see cref="T:TcHmiSrv.Timestamp"/> from a number of milliseconds since 1 January 1970.
            </summary>
            <param name="milliseconds">The number of milliseconds since 1 January 1970.</param>
            <returns>A <see cref="T:TcHmiSrv.Timestamp"/> that represents the given number of milliseconds since 1 January 1970.</returns>
        </member>
        <member name="P:TcHmiSrv.Timestamp.Seconds">
            <summary>
            Gets the number of seconds from the current <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Timestamp.Milliseconds">
            <summary>
            Gets the number of milliseconds from the current <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Timestamp.Nanoseconds">
            <summary>
            Gets the number of nanoseconds from the current <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Timestamp.Now">
            <summary>
            Gets the current <see cref="T:TcHmiSrv.Timestamp"/>.
            </summary>
        </member>
        <member name="T:TcHmiSrv.Value">
            <summary>
            Represents an object to hold values of any <see cref="T:TcHmiSrv.ValueType"/> including maps and vectors.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Value.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Boolean">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Boolean"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Boolean)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:System.Boolean"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Boolean"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Byte">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Byte"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Byte)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:System.Byte"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Byte"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.SByte">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.SByte"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.SByte)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:System.SByte"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.SByte"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Char">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Char"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Char)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:System.Char"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Char"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Int16">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Int16"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Int16)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:System.Int16"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Int16"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.UInt16">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.UInt16"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.UInt16)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:System.UInt16"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.UInt16"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Int32">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Int32"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Int32)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:System.Int32"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Int32"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.UInt32">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.UInt32"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.UInt32)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:System.UInt32"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.UInt32"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Int64">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Int64"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Int64)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:System.Int64"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Int64"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.UInt64">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.UInt64"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.UInt64)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:System.UInt64"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.UInt64"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Single">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Single"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Single)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:System.Single"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Single"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.Double">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.Double"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.Double)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:System.Double"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.Double"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~System.String">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:System.String"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(System.String)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:System.String"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:System.String"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Access">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Access"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Access)~TcHmiSrv.Value">
            <summary>
            Converts an <see cref="T:TcHmiSrv.Access"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Access"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Alarm">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Alarm"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Alarm)~TcHmiSrv.Value">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Alarm"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Alarm"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Binary">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Binary"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Binary)~TcHmiSrv.Value">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Binary"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Binary"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Event">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Event"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Event)~TcHmiSrv.Value">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Event"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Event"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Message">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Message"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Message)~TcHmiSrv.Value">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Message"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Message"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Severity">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:TcHmiSrv.Severity"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Severity)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:TcHmiSrv.Severity"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Severity"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Timespan">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Timespan"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Timespan)~TcHmiSrv.Value">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Timespan"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Timespan"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.Timestamp">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Timestamp"/> class.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Timestamp)~TcHmiSrv.Value">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Timestamp"/> class to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.Timestamp"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.Value)~TcHmiSrv.ValueType">
            <summary>
            Converts an instance of the <see cref="T:TcHmiSrv.Value"/> class to the appropriate <see cref="T:TcHmiSrv.ValueType"/>.
            </summary>
            <param name="val">The <see cref="T:TcHmiSrv.Value"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Implicit(TcHmiSrv.ValueType)~TcHmiSrv.Value">
            <summary>
            Converts a <see cref="T:TcHmiSrv.ValueType"/> to the appropriate instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="arg">The <see cref="T:TcHmiSrv.ValueType"/> to convert.</param>
        </member>
        <member name="M:TcHmiSrv.Value.op_Equality(TcHmiSrv.Value,TcHmiSrv.Value)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Value"/> is equal to the current <see cref="T:TcHmiSrv.Value"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Value"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Value"/> to compare with the current <see cref="T:TcHmiSrv.Value"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Value"/> is equal to the current <see cref="T:TcHmiSrv.Value"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.op_Inequality(TcHmiSrv.Value,TcHmiSrv.Value)">
            <summary>
            Determines whether the specified <see cref="T:TcHmiSrv.Value"/> is not equal to the current <see cref="T:TcHmiSrv.Value"/>.
            </summary>
            <param name="current">The current instance of the <see cref="T:TcHmiSrv.Value"/> class.</param>
            <param name="other">The <see cref="T:TcHmiSrv.Value"/> to compare with the current <see cref="T:TcHmiSrv.Value"/>.</param>
            <returns>true if the specified <see cref="T:TcHmiSrv.Value"/> is not equal to the current <see cref="T:TcHmiSrv.Value"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Value"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.Value"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.Value"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class based on another <see cref="T:TcHmiSrv.Value"/>.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Value"/>.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified boolean value.
            </summary>
            <param name="value">The boolean value to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified double-precision floating-point number.
            </summary>
            <param name="value">The double-precision floating-point number to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified integer.
            </summary>
            <param name="value">The integer to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified long integer.
            </summary>
            <param name="value">The long integer to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified string.
            </summary>
            <param name="value">The string to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Binary)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified instance of the <see cref="T:TcHmiSrv.Binary"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Binary"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Timestamp)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified instance of the <see cref="T:TcHmiSrv.Timestamp"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Timestamp"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Timespan)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified instance of the <see cref="T:TcHmiSrv.Timespan"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Timespan"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified instance of the <see cref="T:TcHmiSrv.Message"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Message"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Event)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified instance of the <see cref="T:TcHmiSrv.Event"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Event"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Alarm)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified instance of the <see cref="T:TcHmiSrv.Alarm"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Alarm"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Access)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified <see cref="T:TcHmiSrv.Access"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Access"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.Severity)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified <see cref="T:TcHmiSrv.Severity"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Severity"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.#ctor(TcHmiSrv.ValueType)">
            <summary>
            Initializes a new instance of the <see cref="T:TcHmiSrv.Value"/> class with the specified <see cref="T:TcHmiSrv.ValueType"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.ValueType"/> to be set.</param>
        </member>
        <member name="P:TcHmiSrv.Value.Item(System.Int32)">
            <summary>
            Accesses a <see cref="T:TcHmiSrv.Value"/> in the vector at the specified index.
            </summary>
            <param name="index">The index of the <see cref="T:TcHmiSrv.Value"/> to get.</param>
            <returns>The <see cref="T:TcHmiSrv.Value"/> at the specified index or a null <see cref="T:TcHmiSrv.Value"/> if the <see cref="T:TcHmiSrv.Value"/> does not exist.</returns>
        </member>
        <member name="P:TcHmiSrv.Value.Item(System.String)">
            <summary>
            Accesses a <see cref="T:TcHmiSrv.Value"/> in the map specified by the name.
            </summary>
            <param name="name">The name of the <see cref="T:TcHmiSrv.Value"/> to get.</param>
            <returns>The <see cref="T:TcHmiSrv.Value"/> specified by the name or a null <see cref="T:TcHmiSrv.Value"/> if the <see cref="T:TcHmiSrv.Value"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.insert(System.String,System.String)">
            <summary>
            Inserts a <see cref="T:System.String"/> with the specified key in the map.
            </summary>
            <param name="key">The key of the <see cref="T:System.String"/> to insert.</param>
            <param name="value">The <see cref="T:System.String"/> to insert.</param>
            <returns>A <see cref="T:TcHmiSrv.ValueIterator"/> to the inserted <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.insert(System.String,TcHmiSrv.Value)">
            <summary>
            Inserts a <see cref="T:TcHmiSrv.Value"/> with the specified key in the map.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Value"/> to insert.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> of the <see cref="T:TcHmiSrv.Value"/> to insert.</param>
            <returns>A <see cref="T:TcHmiSrv.ValueIterator"/> to the inserted <see cref="T:TcHmiSrv.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.insert_or_update(System.String,System.String)">
            <summary>
            Inserts or updates a <see cref="T:System.String"/> with the specified key in the map.
            </summary>
            <param name="key">The key of the <see cref="T:System.String"/> to insert or update.</param>
            <param name="value">The <see cref="T:System.String"/> to insert or update.</param>
            <returns>A <see cref="T:TcHmiSrv.ValueIterator"/> to the inserted or updated <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.insert_or_update(System.String,TcHmiSrv.Value)">
            <summary>
            Inserts or updates a <see cref="T:TcHmiSrv.Value"/> with the specified key in the map.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Value"/> to insert or update.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> of the <see cref="T:TcHmiSrv.Value"/> to insert or update.</param>
            <returns>A <see cref="T:TcHmiSrv.ValueIterator"/> to the inserted or updated <see cref="T:TcHmiSrv.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.find(System.String)">
            <summary>
            Finds a <see cref="T:TcHmiSrv.Value"/> with the specified key in the map.
            </summary>
            <param name="key">The key of the <see cref="T:TcHmiSrv.Value"/> to find.</param>
            <returns>A <see cref="T:TcHmiSrv.ValueIterator"/> to the <see cref="T:TcHmiSrv.Value"/> with the specified key or a <see cref="T:TcHmiSrv.ValueIterator"/> to the end of the map if the <see cref="T:TcHmiSrv.Value"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.remove(TcHmiSrv.ValueIterator)">
            <summary>
            Removes a <see cref="T:TcHmiSrv.Value"/> at the specified position from the map.
            </summary>
            <param name="position">The position of the <see cref="T:TcHmiSrv.Value"/> that should be removed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/> has been removed or <see cref="F:TcHmiSrv.ErrorValue.HMI_E_ENTRY_NOT_FOUND"/> if the <see cref="T:TcHmiSrv.Value"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.add(TcHmiSrv.Value)">
            <summary>
            Adds a <see cref="T:TcHmiSrv.Value"/> to the end of the vector.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> of the <see cref="T:TcHmiSrv.Value"/> to add.</param>
            <returns>The <see cref="T:TcHmiSrv.Value"/> that has been added.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.insert(TcHmiSrv.ValueVectorIterator,TcHmiSrv.Value)">
            <summary>
            Inserts a <see cref="T:TcHmiSrv.Value"/> at the specified position in the vector.
            </summary>
            <param name="position">The position of the <see cref="T:TcHmiSrv.Value"/>.</param>
            <param name="value">The <see cref="T:TcHmiSrv.Value"/> to insert.</param>
            <returns>A <see cref="T:TcHmiSrv.ValueVectorIterator"/> to the inserted <see cref="T:TcHmiSrv.Value"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.find(System.UInt32)">
            <summary>
            Finds a <see cref="T:TcHmiSrv.Value"/> with the specified index in the vector.
            </summary>
            <param name="index">The index of the <see cref="T:TcHmiSrv.Value"/> to find.</param>
            <returns>A <see cref="T:TcHmiSrv.ValueVectorIterator"/> to the <see cref="T:TcHmiSrv.Value"/> with the specified key or a <see cref="T:TcHmiSrv.ValueVectorIterator"/> to the end of the vector if the <see cref="T:TcHmiSrv.Value"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.remove(TcHmiSrv.ValueVectorIterator)">
            <summary>
            Removes a <see cref="T:TcHmiSrv.Value"/> at the specified position from the vector.
            </summary>
            <param name="position">The position of the <see cref="T:TcHmiSrv.Value"/> that should be removed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/> has been removed or <see cref="F:TcHmiSrv.ErrorValue.HMI_E_ENTRY_NOT_FOUND"/> if the <see cref="T:TcHmiSrv.Value"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.remove(System.UInt32)">
            <summary>
            Removes a <see cref="T:TcHmiSrv.Value"/> at the specified index from the vector.
            </summary>
            <param name="index">The index of the <see cref="T:TcHmiSrv.Value"/> that should be removed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/> has been removed or <see cref="F:TcHmiSrv.ErrorValue.HMI_E_ENTRY_NOT_FOUND"/> if the <see cref="T:TcHmiSrv.Value"/> does not exist.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.remove(System.UInt32,System.UInt32)">
            <summary>
            Removes a range of <see cref="T:TcHmiSrv.Value"/>s from the vector.
            </summary>
            <param name="first">The index of the first <see cref="T:TcHmiSrv.Value"/> that should be removed.</param>
            <param name="last">The index of the last <see cref="T:TcHmiSrv.Value"/> that should be removed.</param>
            <returns><see cref="F:TcHmiSrv.ErrorValue.HMI_SUCCESS"/> if the <see cref="T:TcHmiSrv.Value"/>s have been removed; otherwise, any <see cref="T:TcHmiSrv.ErrorValue"/> that best describes which error has occurred.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.clear">
            <summary>
            Removes all <see cref="T:TcHmiSrv.Value"/>s from the map or vector.
            </summary>
        </member>
        <member name="M:TcHmiSrv.Value.reserve(System.UInt32)">
            <summary>
            Reserves memory for a number of <see cref="T:TcHmiSrv.Value"/>s to reduce memory allocations.
            </summary>
            <param name="size">The number of <see cref="T:TcHmiSrv.Value"/>s that should be reserved.</param>
        </member>
        <member name="M:TcHmiSrv.Value.swap(TcHmiSrv.Value)">
            <summary>
            Exchanges the values of two instances of the <see cref="T:TcHmiSrv.Value"/> class.
            </summary>
            <param name="other">The other <see cref="T:TcHmiSrv.Value"/>.</param>
            <returns>true if the swap was successful; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.Value.set(System.String)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified string.
            </summary>
            <param name="value">The string to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(System.Boolean)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified boolean value.
            </summary>
            <param name="value">The boolean value to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(System.Double)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified double-precision floating-point number.
            </summary>
            <param name="value">The double-precision floating-point number to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(System.Int32)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified integer.
            </summary>
            <param name="value">The integer to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(System.Int64)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified long integer.
            </summary>
            <param name="value">The long integer to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Access)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified <see cref="T:TcHmiSrv.Access"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Access"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Severity)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified <see cref="T:TcHmiSrv.Severity"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Severity"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.ValueType)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified <see cref="T:TcHmiSrv.ValueType"/>.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.ValueType"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Binary)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified instance of the <see cref="T:TcHmiSrv.Binary"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Binary"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Timestamp)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified instance of the <see cref="T:TcHmiSrv.Timestamp"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Timestamp"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Timespan)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified instance of the <see cref="T:TcHmiSrv.Timespan"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Timespan"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Message)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified instance of the <see cref="T:TcHmiSrv.Message"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Message"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Event)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified instance of the <see cref="T:TcHmiSrv.Event"/> class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Event"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.set(TcHmiSrv.Alarm)">
            <summary>
            Sets the <see cref="T:TcHmiSrv.Value"/> to the specified instance of the <see cref="T:TcHmiSrv.Alarm"/>/ class.
            </summary>
            <param name="value">The <see cref="T:TcHmiSrv.Alarm"/> to be set.</param>
        </member>
        <member name="M:TcHmiSrv.Value.convert(TcHmiSrv.ValueType)">
            <summary>Trys to convert the <see cref="T:TcHmiSrv.Value"/> to another <see cref="T:TcHmiSrv.ValueType"/>. If
            conversion fails, the <see cref="T:TcHmiSrv.Value"/> will remain unchanged.
            Available conversions are:
            - int to double
            - double to int if there are no fractional digits
            - string containing number to double or int
            - string containing "true" or "false" to boolean
            - string in ISO-8601 to timestamp
            - string in base64 to binary
            - string in base64 containing 64 bit integer to int64
            - struct to alarm
            - struct to message
            - struct to event
            - map to vector
            - struct to vector
            </summary>
            <param name="type">The <see cref="T:TcHmiSrv.ValueType"/> to convert to.</param>
            <returns>The converted <see cref="T:TcHmiSrv.Value"/>.</returns>
        </member>
        <member name="P:TcHmiSrv.Value.Begin">
            <summary>
            A <see cref="T:TcHmiSrv.ValueIterator"/> to the begin of the map.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Value.End">
            <summary>
            A <see cref="T:TcHmiSrv.ValueIterator"/> to the end of the map.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Value.BeginVector">
            <summary>
            A <see cref="T:TcHmiSrv.ValueVectorIterator"/> to the begin of the vector.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Value.EndVector">
            <summary>
            A <see cref="T:TcHmiSrv.ValueVectorIterator"/> to the end of the vector.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Value.Size">
            <summary>
            Gets the number of <see cref="T:TcHmiSrv.Value"/>s in the map or vector.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Value.Empty">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Value"/> is empty.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Value.IsSet">
            <summary>
            Gets a value that indicates whether the <see cref="T:TcHmiSrv.Value"/> is set.
            </summary>
        </member>
        <member name="P:TcHmiSrv.Value.Type">
            <summary>
            Gets or sets the type of the <see cref="T:TcHmiSrv.Value"/>. If the <see cref="T:TcHmiSrv.ValueType"/> is different from the old <see cref="T:TcHmiSrv.ValueType"/> all data will be cleared.
            </summary>
        </member>
        <member name="M:TcHmiSrv.ValueIterator.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ValueIterator"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.ValueIterator"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ValueIterator"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ValueIterator.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.ValueIterator"/>.</returns>
        </member>
        <member name="M:TcHmiSrv.ValueVectorIterator.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ValueVectorIterator"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:TcHmiSrv.ValueVectorIterator"/>.</param>
            <returns>true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:TcHmiSrv.ValueVectorIterator"/>; otherwise, false.</returns>
        </member>
        <member name="M:TcHmiSrv.ValueVectorIterator.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:TcHmiSrv.ValueVectorIterator"/>.</returns>
        </member>
    </members>
</doc>
